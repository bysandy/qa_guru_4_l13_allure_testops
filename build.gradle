plugins {
    id 'io.qameta.allure' version '2.8.1'
    id 'java-library'
    id 'application'
}

repositories {
    mavenCentral()
}

ext.allureVersion = '2.13.8'
ext.junitVersion = '5.7.1'
ext.selenideVersion = '5.19.0'

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = allureVersion
    }
}



dependencies {
    testImplementation([
            'org.aspectj:aspectjweaver:1.9.6',
            'com.codeborne:selenide:' + selenideVersion,
            'io.qameta.allure:allure-selenide:' + allureVersion,
            'ch.qos.logback:logback-classic:1.2.3',
            'com.github.javafaker:javafaker:1.0.2',
            'org.aeonbits.owner:owner:1.0.12',
            'org.hamcrest:hamcrest-all:1.3',
            'org.junit.jupiter:junit-jupiter-api:' + junitVersion,
            'org.junit.jupiter:junit-jupiter-params:' + junitVersion
    ])

    testRuntimeOnly([
            'org.junit.jupiter:junit-jupiter-engine:' + junitVersion,
    ])
}

tasks.withType(Test) {
    systemProperties += System.properties
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=en")

    if (System.getProperty("threads") != null) { //параллелизация тестов
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
            events "started", "failed"
//            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
}